Index: src/Turn/AbstractTurn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Turn;\nimport Cards.*;\nimport Dices.*;\nimport Game.*;\n\nabstract class AbstractTurn {\n/*\n    public TurnResult getRoll() {\n        Dice[] dices = new Dice[6]; //stores the dices\n        boolean tutto = false;\n        short currentPoints = 0;\n\n        //instantiate the dices (doesn't roll them for the first time!)\n        for (byte i = 0; i < 6; i++) {\n            dices[i] = new Dice();\n        }\n\n        boolean roll = true;\n        while (roll) {\n            byte howManyAside = 0;\n            for (byte i = 0; i < 6; i++) {\n                if (!dices[i].isAside()) { //if it was not put aside yet...\n                    dices[i].rollDice(); //...roll it...\n                    Display.displayDice(dices[i].getDiceNumber()); //...print it\n                }\n            } //ends print dices for-loop\n\n            //now: check if roll was at least possibly valid, if not, break the while loop, else add points\n            int countPointsCache = ValidDice.countPoints(dices);\n            if (countPointsCache == 0) break; //CAN BE OVERGIVEN AS DICES THEMSELVES ARE IMMUTABLE.?\n            //else currentPoints += countPointsCache;\n            //TODO: this must only check not-put-aside dices!!\n\n            //now ask user which ones to put aside and put them aside\n            Input.decideDice(dices); //muss ich das jetzt nochmals kopieren oder wurde eigentlich nur das bereits bestehende Objekt verÃ¤ndert?\n\n            //see how many have been put aside\n            for (byte i = 0; i < 6; i++) {\n                if (dices[i].isAside()) {\n                    howManyAside++;\n                }\n            }\n            //if all have been put aside, end while loop and set tutto to true\n            if (howManyAside == 6) {\n                tutto = true;\n                break;\n            }\n            //ask user if he wants to end or roll again, then sets while-loop variable accordingly\n            roll = Input.askUserRE();\n\n        }\n        return new TurnResult(currentPoints, tutto);\n    }\n*/\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Turn/AbstractTurn.java b/src/Turn/AbstractTurn.java
--- a/src/Turn/AbstractTurn.java	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/src/Turn/AbstractTurn.java	(date 1669050978845)
@@ -1,7 +1,7 @@
 package Turn;
 import Cards.*;
 import Dices.*;
-import Game.*;
+import Gameflow.*;
 
 abstract class AbstractTurn {
 /*
Index: src/Cards/Deck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Cards;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class Deck {\n    private List<Card> aCards = new ArrayList<>();\n    //cards that are drawn from the deck are stored in usedCards so that the Cardobjects can be reused\n    private List<Card> usedCards = new ArrayList<>();\n\n    private int numCards;\n\n    public Deck() {\n        for (int i = 0; i < 56; i++) {\n            if (i < 1) {\n                aCards.add(new Card(CardsValue.CLOVERLEAF));\n            } else if (i < 6) {\n                aCards.add(new Card(CardsValue.FIREWORK));\n            } else if (i < 16) {\n                aCards.add(new Card(CardsValue.STOP));\n            } else if (i < 21) {\n                aCards.add(new Card(CardsValue.STRAIGHT));\n            } else if (i < 26) {\n                aCards.add(new Card(CardsValue.PLUSMINUS));\n            } else if (i < 31) {\n                aCards.add(new Card(CardsValue.TIMESTWO));\n            } else if (i < 36) {\n                aCards.add(new Card(CardsValue.BONUS200));\n            } else if (i < 41) {\n                aCards.add(new Card(CardsValue.BONUS300));\n            } else if (i < 46) {\n                aCards.add(new Card(CardsValue.BONUS400));\n            } else if (i < 51) {\n                aCards.add(new Card(CardsValue.BONUS500));\n            } else {\n                aCards.add(new Card(CardsValue.BONUS600));\n            }\n        }\n        Collections.shuffle(aCards);\n    }\n\n\n    public Card getCard() {\n        System.out.println(aCards.size());\n        if (!isEmpty()) {\n            Card aCard = aCards.get(0);\n            usedCards.add(aCard);\n            aCards.remove(0);\n            System.out.println(aCards.size());\n            return aCard;\n        } else {\n            //In case that there are no more cards left in the deck\n            //The ArrayList usedCards is going to be aCards and aCards\n            //is going to be shuffled\n            List<Card> copy = new ArrayList<>();\n            copy = aCards;\n            aCards = usedCards;\n            usedCards = copy;\n            Collections.shuffle(aCards);\n            return getCard();\n        }\n    }\n\n    private Boolean isEmpty() {\n        return (aCards.size() == 0);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Cards/Deck.java b/src/Cards/Deck.java
--- a/src/Cards/Deck.java	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/src/Cards/Deck.java	(date 1669047878969)
@@ -42,7 +42,7 @@
 
 
     public Card getCard() {
-        System.out.println(aCards.size());
+        //System.out.println(aCards.size());
         if (!isEmpty()) {
             Card aCard = aCards.get(0);
             usedCards.add(aCard);
Index: src/Turn/BonusTurn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Turn;\nimport Cards.CardsValue;\nimport Game.Display;\n\npublic class BonusTurn extends AbstractTurn {\n    public TurnResult bonusTurn(short currentPoints, CardsValue cardType) {\n        short newPoints = currentPoints;\n\n        Display.displayCard(cardType);\n        TurnResult result = getRoll();\n\n        newPoints += result.points;\n        if (result.isTutto) {\n            switch (cardType){\n                case BONUS200 -> newPoints += 200;\n                case BONUS300 -> newPoints += 300;\n                case BONUS400 -> newPoints += 400;\n                case BONUS500 -> newPoints += 500;\n                case BONUS600 -> newPoints += 600;\n            }\n        }\n        return new TurnResult(newPoints, result.isTutto);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Turn/BonusTurn.java b/src/Turn/BonusTurn.java
--- a/src/Turn/BonusTurn.java	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/src/Turn/BonusTurn.java	(date 1669050978867)
@@ -1,6 +1,6 @@
 package Turn;
 import Cards.CardsValue;
-import Game.Display;
+import Gameflow.Display;
 
 public class BonusTurn extends AbstractTurn {
     public TurnResult bonusTurn(short currentPoints, CardsValue cardType) {
Index: src/Gameflow/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gameflow;\n\npublic class Player {\n    private final String name;\n    private byte points = 0;\n\n    public Player(String playerName){\n        name = playerName;\n    }\n\n    // How does Game.Player-class know how many points are required to win ? has Game-Class getter method for max points\n   /**\n    public Boolean playerWon(Game G1){\n        byte gamePoints;\n        gamePoints = G1.getGamePoints();\n        return points > gamePoints;\n    }\n    */\n\n    //Is this method needed ? and if yes by whom ?\n    public void addPoints(byte aByte){\n        points += aByte;\n    }\n\n    //Encapsulation wise safe because name final ? Or should a copy be performed ?\n    public String getName(){\n        return name;\n    }\n\n    public byte getPoints(){\n        return points;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gameflow/Player.java b/src/Gameflow/Player.java
--- a/src/Gameflow/Player.java	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/src/Gameflow/Player.java	(date 1669048316330)
@@ -2,24 +2,24 @@
 
 public class Player {
     private final String name;
-    private byte points = 0;
+    private short points = 0;
+    private short maxPoints; // Player class needs to have this information to provide playerWon method
 
-    public Player(String playerName){
+    public Player(String playerName, short maxPoints){
         name = playerName;
+        this.maxPoints = maxPoints;
     }
 
     // How does Game.Player-class know how many points are required to win ? has Game-Class getter method for max points
-   /**
-    public Boolean playerWon(Game G1){
-        byte gamePoints;
-        gamePoints = G1.getGamePoints();
-        return points > gamePoints;
+
+    public Boolean playerWon(){
+        return points > maxPoints;
     }
-    */
+
 
     //Is this method needed ? and if yes by whom ?
-    public void addPoints(byte aByte){
-        points += aByte;
+    public void addPoints(short aShort){
+        points += aShort;
     }
 
     //Encapsulation wise safe because name final ? Or should a copy be performed ?
@@ -27,7 +27,7 @@
         return name;
     }
 
-    public byte getPoints(){
+    public short getPoints(){
         return points;
     }
 }
Index: src/Gameflow/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gameflow;\n\npublic class Game {\n\n    //TODO public short getMaxPoints (for Playerclass)\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gameflow/Game.java b/src/Gameflow/Game.java
--- a/src/Gameflow/Game.java	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/src/Gameflow/Game.java	(date 1669052630596)
@@ -1,7 +1,74 @@
 package Gameflow;
 
+import Cards.Card;
+import Cards.CardsValue;
+import Cards.Deck;
+import Turn.*;
+
 public class Game {
+    //Singleton Game Object Field:
+    private static Game uniqueInstance;
+    private final short maxPoints;
+    private Player[] players; // = new Player[#
+
+
+    //singleton implementation of Constructor (can only be called by Game.getInstance()) :
+    private Game(){
+        maxPoints = Input.takeMaxPoints();
+        String[] names = Input.takeNames(); //get Player-names
+
+        // The Player array needs to be initialized with the number Players (= len of names-array) :
+        this.players = new Player[names.length];
 
-    //TODO public short getMaxPoints (for Playerclass)
+        //For loop to go through names and thereby initialize players
+        for(int i = 0; i< names.length; i++){
+            players[i] = new Player(names[i], maxPoints);
+        }
+    }
+
+    //synchronized getInstance Method to prevent different threads from creating two singleton Objects:
+    public static synchronized Game getInstance() {
+        if (uniqueInstance == null) {
+            uniqueInstance = new Game();
+        }
+        return uniqueInstance;
+    }
+
+    public void startGameFlow(){
+        //boolean isOver = false; //changes to true the moment a player reaches maxPoints
+        Deck aDeck = new Deck(); //Card supply
+        while(true){
+            for(Player aPlayer: players){
+                //Ask Player whether he wants to see his score
+                char DorR = Input.askUserDR(); //Should be Boolean! if("!"Input.askUserDR())
+                if("D".charAt(0) == DorR){
+                    System.out.println("You Have got " + aPlayer.getPoints() + "Points.");
+                    System.out.println((maxPoints-aPlayer.getPoints()) + " more to go.");
+                }
+                else{
+                    while(true){ //this loop ends when a player has no more dices to choose or he decides to stop his round after a tutto
+                        Card aCard = aDeck.getCard();
+                        TurnResult result = makeTurn(aPlayer, aCard.getValue());
+                        aPlayer.addPoints(result.points);
+                        if(!result.isTutto){break;}
+                    }
+                }
+            if(aPlayer.playerWon()){
+                System.out.println(aPlayer.getName() + " has won the game! Good Job");
+                break;
+            }
+            }
+        }
+    }
+
+    private TurnResult makeTurn(Player player, CardsValue aCardValue){
+        //everything above .ordinal 6 are Bonus cards
+        if(aCardValue.ordinal() > 6){
+            TurnResult resultRound = BonusTurn.bonusTurn(player.getPoints(), aCardValue);
+            return resultRound;
+        }
+        return new TurnResult((short) 3, true);
+    }
+
 
 }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20_11_2022_20_45__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20_11_2022_20_45__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_20_11_2022_20_45__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20_11_2022_20_45__Changes_.xml	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ /dev/null	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20_11_2022_20_45_[Changes]" date="1668973548335" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_11_2022_20_45_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20.11.2022 20:45 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_18_11_2022_14_31__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_18_11_2022_14_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_18_11_2022_14_31__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_18_11_2022_14_31__Changes_.xml	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ /dev/null	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_18_11_2022_14_31_[Changes]" date="1668778291935" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_11_2022_14_31_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 18.11.2022 14:31 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b577d954-8adb-45f0-8cd3-77c2a40a1194\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2HiojMgcsYG36dHDnxZdjmldgRR\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"Game\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"Turn\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"Softcon_TUTTO\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b577d954-8adb-45f0-8cd3-77c2a40a1194\" name=\"Changes\" comment=\"\" />\n      <created>1668777400139</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1668777400139</updated>\n      <workItem from=\"1668777401501\" duration=\"329000\" />\n      <workItem from=\"1668784770747\" duration=\"3851000\" />\n      <workItem from=\"1668850787697\" duration=\"7141000\" />\n      <workItem from=\"1669018359207\" duration=\"3855000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"d\">\n      <created>1668778314133</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668778314133</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Turn commit\">\n      <created>1668778512073</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668778512073</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Turn commit\">\n      <created>1668778675492</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668778675492</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Turn commit\">\n      <created>1668780484362</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668780484362</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Turn commit\">\n      <created>1668781274883</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668781274883</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1668984614481</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668984614481</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1669021276677</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669021276677</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1669025266591</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669025266591</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"9\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\n    <MESSAGE value=\"d\" />\n    <MESSAGE value=\"Turn commit\" />\n    <MESSAGE value=\"Display Class &amp; Player Class\" />\n    <MESSAGE value=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/.idea/workspace.xml	(date 1669052408455)
@@ -4,8 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b577d954-8adb-45f0-8cd3-77c2a40a1194" name="Changes" comment="">
+    <list default="true" id="53e70105-e171-4356-932f-5dec625c8c62" name="Changes" comment="Display Class &amp; Player Class">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_11_2022_14_31__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_11_2022_20_45__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Softcon_TUTTO.iml" beforeDir="false" afterPath="$PROJECT_DIR$/Softcon_TUTTO.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Cards/Deck.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Cards/Deck.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gameflow/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gameflow/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gameflow/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gameflow/Player.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Turn/AbstractTurn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Turn/AbstractTurn.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Turn/BonusTurn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Turn/BonusTurn.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -34,16 +43,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "last_opened_file_path": "C:/Users/samue/Desktop/Dateien/UniversitÃ¤t/Semester 3/Software Construction/Assignment 1/Assignment 1 structured",
+    "node.js.detected.package.eslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
       <recent name="Game" />
@@ -69,7 +79,7 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="b577d954-8adb-45f0-8cd3-77c2a40a1194" name="Changes" comment="" />
+      <changelist id="53e70105-e171-4356-932f-5dec625c8c62" name="Changes" comment="Display Class &amp; Player Class" />
       <created>1668777400139</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -78,6 +88,7 @@
       <workItem from="1668784770747" duration="3851000" />
       <workItem from="1668850787697" duration="7141000" />
       <workItem from="1669018359207" duration="3855000" />
+      <workItem from="1669044761231" duration="7589000" />
     </task>
     <task id="LOCAL-00001" summary="d">
       <created>1668778314133</created>
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Dices.*;\nimport Gameflow.Display;\n\npublic class Main {\n\n\n    public static void main(String[] args) {\n        Dice[] dices = new Dice[6]; //stores the dices\n        for (byte i = 0; i < dices.length; i++) { //instantiate the dices (rolls them for the first time)\n            dices[i] = new Dice();\n            dices[i].rollDice();\n        }\n        //System.out.println(dices[2].getDiceNumber().name() == \"FOUR\");\n        for(int i = 0; i<dices.length;++i){\n            Display.displayDice(dices[i].getDiceNumber(), (byte)(i+1));\n        }\n        System.out.println(ValidDice.countPoints(dices));\n\n        dices[2].putAside();\n        Gameflow.Input.decideDice(dices);\n\n        Display.displayDice(diceNumber.FIVE, (byte) 1);\n        Display.displayDice(diceNumber.TWO, (byte) 2);\n        Display.displayDice(diceNumber.ONE, (byte) 3);\n        Display.displayDice(diceNumber.THREE, (byte) 4);\n\n\n\n\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/src/Main.java	(date 1669047402862)
@@ -1,32 +1,11 @@
 import Dices.*;
 import Gameflow.Display;
+import Gameflow.*;
 
 public class Main {
 
 
     public static void main(String[] args) {
-        Dice[] dices = new Dice[6]; //stores the dices
-        for (byte i = 0; i < dices.length; i++) { //instantiate the dices (rolls them for the first time)
-            dices[i] = new Dice();
-            dices[i].rollDice();
-        }
-        //System.out.println(dices[2].getDiceNumber().name() == "FOUR");
-        for(int i = 0; i<dices.length;++i){
-            Display.displayDice(dices[i].getDiceNumber(), (byte)(i+1));
-        }
-        System.out.println(ValidDice.countPoints(dices));
-
-        dices[2].putAside();
-        Gameflow.Input.decideDice(dices);
-
-        Display.displayDice(diceNumber.FIVE, (byte) 1);
-        Display.displayDice(diceNumber.TWO, (byte) 2);
-        Display.displayDice(diceNumber.ONE, (byte) 3);
-        Display.displayDice(diceNumber.THREE, (byte) 4);
-
-
-
-
-
+    Game G1 = Game.getInstance();
     }
 }
Index: Softcon_TUTTO.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/src/Turn\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Softcon_TUTTO.iml b/Softcon_TUTTO.iml
--- a/Softcon_TUTTO.iml	(revision 83d79fa21533888a2e1ca1965d48d127d608a2ee)
+++ b/Softcon_TUTTO.iml	(date 1669050584269)
@@ -4,7 +4,6 @@
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <excludeFolder url="file://$MODULE_DIR$/src/Turn" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
