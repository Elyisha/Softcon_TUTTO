Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Dices.*;\nimport Gameflow.Display;\n\npublic class Main {\n\n\n    public static void main(String[] args) {\n      Dice[] dices = new Dice[6]; //stores the dices\n        for (byte i = 0; i < dices.length; i++) { //instantiate the dices (rolls them for the first time)\n            dices[i] = new Dice();\n            dices[i].rollDice();\n            //dices[i].diceNumber = diceNumber.SIX;\n        }\n\n        System.out.println(ValidDice.countPoints(dices));\n        /*\n        dices[0].diceNumber = diceNumber.FOUR;\n        dices[1].diceNumber = diceNumber.TWO;\n        dices[2].diceNumber = diceNumber.FOUR;\n        dices[3].diceNumber = diceNumber.FOUR;\n        dices[4].diceNumber = diceNumber.FOUR;\n        dices[5].diceNumber = diceNumber.SIX;\n\n        /*\n        dices[5].putAside();\n        dices[5].diceNumber = diceNumber.FIVE;\n\n\n\n        //System.out.println(dices[2].getDiceNumber().name() == \"FOUR\");\n        for(int i = 0; i<dices.length;++i){\n            Display.displayDice(dices[i].getDiceNumber(), (byte)(i+1));\n        }\n\n        dices[0].putAside();\n        dices[1].putAside();\n        dices[5].putAside();\n        //dices[3].putAside();\n        //dices[4].putAside();\n\n        System.out.println(ValidDice.hasValidDicesLeft(dices));\n*/\n        /*\n        System.out.println(ValidDice.countPoints(dices));\n\n        dices[2].putAside();\n        Gameflow.Input.decideDice(dices);\n\n        Display.displayDice(diceNumber.FIVE, (byte) 1);\n        Display.displayDice(diceNumber.TWO, (byte) 2);\n        Display.displayDice(diceNumber.ONE, (byte) 3);\n        Display.displayDice(diceNumber.THREE, (byte) 4);\n\n\n        short a = 12;\n        System.out.println(a);\n    */\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 6b8a6d175978562a92c7711b827d0aa6ce30469f)
+++ b/src/Main.java	(date 1669106097888)
@@ -1,17 +1,21 @@
 import Dices.*;
 import Gameflow.Display;
+import Gameflow.Game;
 
 public class Main {
 
 
     public static void main(String[] args) {
-      Dice[] dices = new Dice[6]; //stores the dices
+      /*
+        Dice[] dices = new Dice[6]; //stores the dices
         for (byte i = 0; i < dices.length; i++) { //instantiate the dices (rolls them for the first time)
             dices[i] = new Dice();
             dices[i].rollDice();
             //dices[i].diceNumber = diceNumber.SIX;
         }
 
+
+
         System.out.println(ValidDice.countPoints(dices));
         /*
         dices[0].diceNumber = diceNumber.FOUR;
@@ -55,6 +59,8 @@
         short a = 12;
         System.out.println(a);
     */
+        Game G1 = Game.getInstance();
+        G1.startGameFlow();
 
     }
 }
Index: src/Turn/AbstractTurn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Turn;\nimport Cards.*;\nimport Dices.*;\nimport Gameflow.*;\n\n//todo helper funktion isTutto(dices): boolean\nabstract class AbstractTurn {\n\n    public static TurnResult getRoll() {\n        byte howManyAside = 0;\n        Dice[] dices = new Dice[6]; //stores the dices\n        boolean tutto = false;\n        short currentPoints = 0;\n\n        //instantiate the dices (doesn't roll them for the first time!)\n        for (byte i = 0; i < 6; i++) {\n            dices[i] = new Dice();\n        }\n\n        boolean roll = true;\n        while (roll) {\n            Dice[] countDices = new Dice[6 - howManyAside];\n            howManyAside = 0;\n            byte forLoopCounter=0; //TODO really ugly\n            for (byte i = 0; i < 6; i++) {\n                if (!dices[i].isAside()) { //if it was not put aside yet...\n                    dices[i].rollDice(); //...roll it...\n                    Display.displayDice(dices[i].getDiceNumber(), i); //...print it\n                    forLoopCounter++; //TODO really ugly //add indice\n                    countDices[forLoopCounter] = dices[i]; //TODO kinda ugly\n                }\n            } //ends print dices for-loop\n\n            //now: check if roll was at least possibly valid, if not, break the while loop, else add points\n            if (ValidDice.countPoints(countDices) == 0) {//DONE: should only count if it is valid (those NOT put aside yet)\n                currentPoints = 0;\n                break;\n            }\n\n            //now ask user which ones to put aside and put them aside\n            currentPoints += Input.decideDice(dices); //muss ich das jetzt nochmals kopieren oder wurde eigentlich nur das bereits bestehende Objekt verÃ¤ndert?\n\n            //see how many have been put aside (for tutto recognization)\n            for (byte i = 0; i < 6; i++) {\n                if (dices[i].isAside()) {\n                    howManyAside++;\n                }\n            }\n            //if all have been put aside, end while loop and set tutto to true\n            if (howManyAside == 6) {\n                tutto = true;\n                break;\n            }\n            //ask user if he wants to end or roll again, then sets while-loop variable accordingly\n            roll = Input.askUserRE();\n\n        }\n        return new TurnResult(currentPoints, tutto);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Turn/AbstractTurn.java b/src/Turn/AbstractTurn.java
--- a/src/Turn/AbstractTurn.java	(revision 6b8a6d175978562a92c7711b827d0aa6ce30469f)
+++ b/src/Turn/AbstractTurn.java	(date 1669107526298)
@@ -25,9 +25,8 @@
             for (byte i = 0; i < 6; i++) {
                 if (!dices[i].isAside()) { //if it was not put aside yet...
                     dices[i].rollDice(); //...roll it...
-                    Display.displayDice(dices[i].getDiceNumber(), i); //...print it
-                    forLoopCounter++; //TODO really ugly //add indice
-                    countDices[forLoopCounter] = dices[i]; //TODO kinda ugly
+                    Display.displayDice(dices[i].getDiceNumber(), (byte) (i+1)); //...print it
+                    countDices[forLoopCounter++] = dices[i]; //TODO kinda ugly
                 }
             } //ends print dices for-loop
 
Index: src/Gameflow/Input.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gameflow;\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.List;\nimport Dices.*;\n\npublic class Input {\n\n    public static String[] takeNames(){     //alphabetic order\n        String[] Names;\n        Scanner NameInput = new Scanner(System.in);\n\n        System.out.println(\"Put in your names seperated by a coma (example: Hans, Peter, Sara)\");\n\n        while(true) {\n            String Input = NameInput.nextLine().replaceAll(\"\\\\s+\", \"\");\n\n            if(Input.length() == 0) System.out.println(\"Must have at least 2 Players!\");\n            else if(Input.matches(\".*[0-9].*\")) System.out.println(\"Names can't contain numbers!\");\n            else {\n                return Names = Input.split(\",\");\n            }\n        }\n    }\n\n    public static Short takeMaxPoints(){\n        Short MaxPoints;\n        Scanner PointInput = new Scanner(System.in);\n\n        System.out.println(\"To how many points do you want to play?\");\n\n        while(true) {\n            String Input = PointInput.nextLine().replaceAll(\"\\\\s+\", \"\");\n\n            if(Input.length() == 0) System.out.println(\"Must type in an amount!\");\n            else if(!Input.matches(\"[0-9]+\")) System.out.println(\"Can only type-in numbers!\");\n            else if(Integer.valueOf(Input) < 500 || Integer.valueOf(Input) > 32000)\n                System.out.println(\"Allowed point range is from 500 to 32000\");\n            else return MaxPoints = Short.valueOf(Input);\n        }\n    }\n    public static boolean askUserDR(){     //change return type to boolean\n        char DR;\n        Scanner DRInput = new Scanner(System.in);\n\n        System.out.println(\"Do you want to Game.Display (D) or Roll (R)?\");\n\n        while(true){\n            String Input = DRInput.nextLine().replaceAll(\"\\\\s\",\"\").toUpperCase();\n\n            if(Input.length() != 1) System.out.println(\"Must type in one character only!\");\n            else if(!(Input.contains(\"R\") || Input.contains(\"D\"))) System.out.println(\"Must type in D or R\");\n            else {\n                DR = Input.charAt(0);\n                return (DR == 'R');\n            }\n        }\n    }\n    public static boolean askUserRE(){     //change return type to boolean\n        char RE;\n        Scanner REInput = new Scanner(System.in);\n\n        System.out.println(\"Do you want to Roll (R) or End (E)?\");\n\n        while(true){\n            String Input = REInput.nextLine().replaceAll(\"\\\\s\",\"\").toUpperCase();\n\n            if(Input.length() != 1) System.out.println(\"Must type in one character only!\");\n            else if(!(Input.contains(\"R\") || Input.contains(\"E\"))) System.out.println(\"Must type in R or E\");\n            else {\n                RE = Input.charAt(0);\n                return (RE == 'R');\n            }\n        }\n    }\n\n    public static short decideDice(Dice[] dices) {\n        Scanner DDInput = new Scanner(System.in);\n        System.out.println(\"Which dices do you want to put aside? Enter your decision by separating \" +\n                \"the dice-index with a comma (e.g. 2,4,5).\");\n\n        while(true) {\n            List<Integer> numbers = new ArrayList<Integer>();\n            boolean asideCheck = true;\n            boolean check = true;\n            byte counter = 0;\n            String Input = DDInput.nextLine().replaceAll(\"\\\\s\",\"\");\n\n            for(int i = 0; i < Input.length(); ++ i) {\n                if(i%2 == 0) {\n                    if (!(Character.isDigit(Input.charAt(i)) && Character.getNumericValue(Input.charAt(i)) < dices.length+1\n                    && Character.getNumericValue(Input.charAt(i)) > 0)) {\n                        check = false;\n                        break;\n                    }\n                    if(dices[Character.getNumericValue(Input.charAt(i)-1)].isAside()) {\n                        System.out.println(\"Dice at position \" + Character.getNumericValue(Input.charAt(i)) + \" has already been put aside!\");\n                        asideCheck = false;\n                        check = false;\n                        break;\n                    }\n                    numbers.add(Character.getNumericValue(Input.charAt(i)));\n                }\n                else if(Input.charAt(i) != ',') {check = false; break;}\n                }\n            if(!asideCheck);\n            else if(!check && asideCheck) {\n                System.out.println(\"Must type in the numbers according to the correct format (e.g. \" +\n                        \"1,3,4)\");\n            }\n            else {\n                Dice[] countDices = new Dice[numbers.size()];\n                for (byte i = 0; i < numbers.size(); i++) {\n                    dices[numbers.get(i)-1].putAside();\n                    countDices[i] = dices[numbers.get(i)-1]; //add to countDices\n                }\n\n                return Dices.ValidDice.countPoints(countDices);\n            }\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gameflow/Input.java b/src/Gameflow/Input.java
--- a/src/Gameflow/Input.java	(revision 6b8a6d175978562a92c7711b827d0aa6ce30469f)
+++ b/src/Gameflow/Input.java	(date 1669109222585)
@@ -115,7 +115,7 @@
                     dices[numbers.get(i)-1].putAside();
                     countDices[i] = dices[numbers.get(i)-1]; //add to countDices
                 }
-
+                System.out.println("You put " + Dices.ValidDice.countPoints(countDices));
                 return Dices.ValidDice.countPoints(countDices);
             }
         }
Index: src/Gameflow/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gameflow;\n\nimport Cards.Card;\nimport Cards.CardsValue;\nimport Cards.Deck;\nimport Turn.*;\n\npublic class Game {\n    //Singleton Game Object Field:\n    private static Game uniqueInstance;\n    private final short maxPoints;\n    private Player[] players; // = new Player[#\n\n\n    //singleton implementation of Constructor (can only be called by Game.getInstance()) :\n    private Game(){\n        maxPoints = Input.takeMaxPoints();\n        String[] names = Input.takeNames(); //get Player-names\n\n        // The Player array needs to be initialized with the number Players (= len of names-array) :\n        this.players = new Player[names.length];\n\n        //For loop to go through names and thereby initialize players\n        for(int i = 0; i< names.length; i++){\n            players[i] = new Player(names[i], maxPoints);\n        }\n    }\n\n    //synchronized getInstance Method to prevent different threads from creating two singleton Objects:\n    public static synchronized Game getInstance() {\n        if (uniqueInstance == null) {\n            uniqueInstance = new Game();\n        }\n        return uniqueInstance;\n    }\n\n    public void startGameFlow(){\n        //boolean isOver = false; //changes to true the moment a player reaches maxPoints\n        Deck aDeck = new Deck(); //Card supply\n        while(true){\n            for(Player aPlayer: players){\n                //Ask Player whether he wants to see his score\n                char DorR = Input.askUserDR(); //Should be Boolean! if(\"!\"Input.askUserDR())\n                if(\"D\".charAt(0) == DorR){\n                    System.out.println(\"You Have got \" + aPlayer.getPoints() + \"Points.\");\n                    System.out.println((maxPoints-aPlayer.getPoints()) + \" more to go.\");\n                }\n                else{\n                    while(true){ //this loop ends when a player has no more dices to choose or he decides to stop his round after a tutto\n                        Card aCard = aDeck.getCard();\n                        TurnResult result = makeTurn(aPlayer, aCard.getValue());\n                        aPlayer.addPoints(result.points);\n                        if(!result.isTutto){break;}\n                    }\n                }\n            if(aPlayer.playerWon()){\n                System.out.println(aPlayer.getName() + \" has won the game! Good Job\");\n                break;\n            }\n            }\n        }\n    }\n\n    private TurnResult makeTurn(Player player, CardsValue aCardValue){\n        //everything above .ordinal 6 are Bonus cards\n        if(aCardValue.ordinal() > 6){\n            TurnResult resultRound = BonusTurn.bonusTurn(player.getPoints(), aCardValue);\n            return resultRound;\n        }\n        return new TurnResult((short) 3, true);\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gameflow/Game.java b/src/Gameflow/Game.java
--- a/src/Gameflow/Game.java	(revision 6b8a6d175978562a92c7711b827d0aa6ce30469f)
+++ b/src/Gameflow/Game.java	(date 1669107846346)
@@ -37,36 +37,40 @@
     public void startGameFlow(){
         //boolean isOver = false; //changes to true the moment a player reaches maxPoints
         Deck aDeck = new Deck(); //Card supply
-        while(true){
+        boolean isOver = false;
+        while(!isOver){ //breaks if a player won the game
             for(Player aPlayer: players){
                 //Ask Player whether he wants to see his score
-                char DorR = Input.askUserDR(); //Should be Boolean! if("!"Input.askUserDR())
-                if("D".charAt(0) == DorR){
-                    System.out.println("You Have got " + aPlayer.getPoints() + "Points.");
+                System.out.println(aPlayer.getName()+":");
+                if(!Input.askUserDR()){
+                    System.out.println("You Have got " + aPlayer.getPoints() + " Points.");
                     System.out.println((maxPoints-aPlayer.getPoints()) + " more to go.");
                 }
-                else{
+
                     while(true){ //this loop ends when a player has no more dices to choose or he decides to stop his round after a tutto
-                        Card aCard = aDeck.getCard();
+                        Card aCard = new Card(CardsValue.BONUS200); //aDeck.getCard();
                         TurnResult result = makeTurn(aPlayer, aCard.getValue());
-                        aPlayer.addPoints(result.points);
+                        aPlayer.addPoints(result.points); //set or diff
                         if(!result.isTutto){break;}
                     }
-                }
+
             if(aPlayer.playerWon()){
                 System.out.println(aPlayer.getName() + " has won the game! Good Job");
+                isOver = true;
                 break;
             }
             }
+
         }
     }
 
     private TurnResult makeTurn(Player player, CardsValue aCardValue){
         //everything above .ordinal 6 are Bonus cards
-        if(aCardValue.ordinal() > 6){
-            TurnResult resultRound = BonusTurn.bonusTurn(player.getPoints(), aCardValue);
+        if(aCardValue.ordinal() > 5){
+            TurnResult resultRound = BonusTurn.bonusTurn(player.getPoints(), aCardValue); //Pointer to a field ?
             return resultRound;
         }
+
         return new TurnResult((short) 3, true);
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b577d954-8adb-45f0-8cd3-77c2a40a1194\" name=\"Changes\" comment=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_11_18__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_11_18__Changes_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_18_46__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_18_46__Changes_.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Gameflow/Input.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Gameflow/Input.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2HiojMgcsYG36dHDnxZdjmldgRR\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"Game\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"Turn\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"Softcon_TUTTO\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b577d954-8adb-45f0-8cd3-77c2a40a1194\" name=\"Changes\" comment=\"\" />\n      <created>1668777400139</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1668777400139</updated>\n      <workItem from=\"1668777401501\" duration=\"329000\" />\n      <workItem from=\"1668784770747\" duration=\"3851000\" />\n      <workItem from=\"1668850787697\" duration=\"7141000\" />\n      <workItem from=\"1669018359207\" duration=\"3855000\" />\n      <workItem from=\"1669042981813\" duration=\"3156000\" />\n      <workItem from=\"1669056979842\" duration=\"6664000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"d\">\n      <created>1668778314133</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668778314133</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Turn commit\">\n      <created>1668778512073</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668778512073</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Turn commit\">\n      <created>1668778675492</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668778675492</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Turn commit\">\n      <created>1668780484362</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668780484362</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Turn commit\">\n      <created>1668781274883</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668781274883</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1668984614481</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668984614481</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1669021276677</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669021276677</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1669025266591</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669025266591</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <created>1669058983950</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669058983950</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\n    <MESSAGE value=\"d\" />\n    <MESSAGE value=\"Turn commit\" />\n    <MESSAGE value=\"Display Class &amp; Player Class\" />\n    <MESSAGE value=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6b8a6d175978562a92c7711b827d0aa6ce30469f)
+++ b/.idea/workspace.xml	(date 1669109223083)
@@ -4,10 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b577d954-8adb-45f0-8cd3-77c2a40a1194" name="Changes" comment="Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_11_18__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_11_18__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_18_46__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_11_2022_18_46__Changes_.xml" afterDir="false" />
+    <list default="true" id="53e70105-e171-4356-932f-5dec625c8c62" name="Changes" comment="Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gameflow/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gameflow/Game.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Gameflow/Input.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gameflow/Input.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gameflow/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gameflow/Player.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Turn/AbstractTurn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Turn/AbstractTurn.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -172,4 +175,15 @@
     <MESSAGE value="Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml" />
     <option name="LAST_COMMIT_MESSAGE" value="Merge branch 'master' of https://github.com/Elyisha/Softcon_TUTTO&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml" />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/Gameflow/Game.java</url>
+          <line>40</line>
+          <option name="timeStamp" value="7" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: src/Gameflow/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Gameflow;\n\npublic class Player {\n    private final String name;\n    private short points = 0;\n    private short maxPoints; // Player class needs to have this information to provide playerWon method\n\n    public Player(String playerName, short maxPoints){\n        name = playerName;\n        this.maxPoints = maxPoints;\n    }\n\n    // How does Game.Player-class know how many points are required to win ? has Game-Class getter method for max points\n\n    public Boolean playerWon(){\n        return points > maxPoints;\n    }\n\n\n    //Is this method needed ? and if yes by whom ?\n    public void addPoints(short aShort){\n        points += aShort;\n    }\n\n    //Encapsulation wise safe because name final ? Or should a copy be performed ?\n    public String getName(){\n        return name;\n    }\n\n    public short getPoints(){\n        return points;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gameflow/Player.java b/src/Gameflow/Player.java
--- a/src/Gameflow/Player.java	(revision 6b8a6d175978562a92c7711b827d0aa6ce30469f)
+++ b/src/Gameflow/Player.java	(date 1669106097905)
@@ -3,7 +3,7 @@
 public class Player {
     private final String name;
     private short points = 0;
-    private short maxPoints; // Player class needs to have this information to provide playerWon method
+    private final short maxPoints; // Player class needs to have this information to provide playerWon method
 
     public Player(String playerName, short maxPoints){
         name = playerName;
