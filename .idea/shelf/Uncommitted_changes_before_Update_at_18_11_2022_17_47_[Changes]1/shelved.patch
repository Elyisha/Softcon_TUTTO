Index: src/Turn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Turn.java b/src/Turn.java
--- a/src/Turn.java	
+++ b/src/Turn.java	
@@ -1,3 +1,4 @@
+
 public class Turn { // Singleton?
 
     public short turn() {
Index: src/Cards/Deck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Cards/Deck.java b/src/Cards/Deck.java
--- a/src/Cards/Deck.java	
+++ b/src/Cards/Deck.java	
@@ -12,6 +12,7 @@
     private int numCards;
 
     public Deck() {
+        //Fill Deck with Cards
         for (int i = 0; i < 56; i++) {
             if (i < 1) {
                 aCards.add(new Card(CardsValue.CLOVERLEAF));
@@ -37,6 +38,7 @@
                 aCards.add(new Card(CardsValue.BONUS600));
             }
         }
+        //Shuffle Deck
         Collections.shuffle(aCards);
     }
 
Index: src/Cards/Card.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Cards/Card.java b/src/Cards/Card.java
--- a/src/Cards/Card.java	
+++ b/src/Cards/Card.java	
@@ -1,7 +1,7 @@
 package Cards;
 
 public class Card {
-    private CardsValue aCardsValue;
+    private final CardsValue aCardsValue;
 
     public Card(CardsValue cardsValue) {
         aCardsValue = cardsValue;
